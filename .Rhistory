library(Seurat)
library(ggplot2)
library(dplyr)
library(patchwork)
library(SoupX)
library(celda)
library(DropletUtils)
library(glmGamPoi)
options(future.globals.maxSize=10000000000000000)
p1 <- DimPlot(integrated, reduction = "umap", group.by = "patient")
integrated <- readRDS("/Users/gagled01/morganLab/Waldenstroms/singlecell/objects/scRNA_SCTransformed_Integrated.rds")
p1 <- DimPlot(integrated, reduction = "umap", group.by = "patient")
p2 <- DimPlot(integrated, reduction = "umap", group.by = "batch")
p3 <- DimPlot(integrated, reduction = "umap", group.by = "source")
basic.patch <- p1 | p2 | p3
ggsave(basic.patch, "/Users/gagled01/morganLab/Waldenstroms/singlecell/figures/scRNA_SCTransformedIntegrated_BasicUMAPs")
p1 | p2 | p3
ggsave("/Users/gagled01/morganLab/Waldenstroms/singlecell/figures/scRNA_SCTransformedIntegrated_BasicUMAPs")
p1 | p2 | p3
ggsave("/Users/gagled01/morganLab/Waldenstroms/singlecell/figures/scRNA_SCTransformedIntegrated_BasicUMAPs.png", height = 4, width = 12)
library(Seurat)
library(ggplot2)
library(dplyr)
library(patchwork)
options(future.globals.maxSize=10000000000000000)
integrated <- readRDS("/Users/gagled01/morganLab/Waldenstroms/singlecell/objects/scRNA_SCTransformed_Integrated.rds")
library(Seurat)
library(Matrix)
cell_subset <- readRDS("/Users/gagled01/morganLab/Waldenstroms/singlecell/objects/scRNA_SCTransformed_Integrated.rds")
### CONVERTING TO MATRICES/LISTS FOR CELL TYPIST INPUT ###
# Read in Seurat object
# CellTypist requires a log-normalized (to 10,000) expression matrix, a list of cells, and a list of genes/features
raw.matrix <- cell_subset@assays$RNA@data
cell.names <- Cells(cell_subset@assays$RNA)
gene.names <- rownames(cell_subset@assays$RNA)
# Write out sparse matrix
writeMM(raw.matrix, '/Users/gagled01/morganLab/Waldenstroms/singlecell/scRNA_SCTransformIntegrated_Matrix.mtx')
# Write out gene and cell lists
write.table(cell.names, '/Users/gagled01/morganLab/Waldenstroms/singlecell/scRNA_SCTransformIntegrated_cellNames.tsv', quote = F, sep = '\t',
col.names = F, row.names = F)
write.table(gene.names, '/Users/gagled01/morganLab/Waldenstroms/singlecell/scRNA_SCTransformIntegrated_geneNames.tsv', quote = F, sep = '\t',
col.names = F, row.names = F)
length(cell.names)
length(gene.names)
dim(raw.matrix)
library(Seurat)
library(SeuratDisk)
library(anndata)
library(zellkonverter)
library(ggplot2)
library(scran)
library(scater)
options(future.globals.maxSize=1000000000000000) # Set max global size so we don't run out of memory
base.object <- readRDS("/Users/gagled01/morganLab/Waldenstroms/singlecell/objects/scRNA_SCTransformed_Integrated.rds")
h5 <- readH5AD("/Users/gagled01/morganLab/Waldenstroms/singlecell/scRNA_SCTransformIntegrated_CellTypistAnnotated.h5ad", verbose = TRUE)
seurat.object <- as.Seurat(h5, counts = "X", data = NULL)
saveRDS(seurat.object, "/Users/gagled01/morganLab/Waldenstroms/singlecell/scRNA_SCTransformIntegrated_CTAnnotated.rds")
DimPlot(seurat.object, group.by = "majority_voting")
ElbowPlot(
object = seurat.object,
ndims = 15
) +
geom_abline(
aes(intercept = 2.45, slope = 0, color = "red"),
show.legend = FALSE
)
seurat.object
base.object
mismatch <- setdiff(rownames(seurat.object@meta.data), rownames(base.object@meta.data))
seurat.object <- seurat.object[,!colnames(seurat.object) %in% mismatch]
base.object@meta.data$majority_voting <- seurat.object@meta.data$majority_voting
base.object@meta.data$conf_score <- seurat.object@meta.data$conf_score
base.object@meta.data$predicted_labels <- seurat.object@meta.data$predicted_labels
table(base.object@meta.data$majority_voting)
table(base.object@meta.data$majority_voting)
DimPlot(base.object)
DimPlot(base.object, group.by = "majority_voting")
saveRDS(base.object, "/Users/gagled01/morganLab/Waldenstroms/singlecell/objects/scRNA_SCTransformIntegrated_CTAnnotated.rds")
library(Seurat)
library(ggplot2)
library(dplyr)
library(patchwork)
options(future.globals.maxSize=10000000000000000)
sobj <- readRDS("/Users/gagled01/morganLab/Waldenstroms/singlecell/objects/scRNA_SCTransformIntegrated_CTAnnotated.rds")
seurobj <- readRDS("/Users/gagled01/morganLab/Waldenstroms/singlecell/objects/scRNA_SCTransformIntegrated_CTAnnotated.rds")
p1 <- DimPlot(seurobj, reduction = "umap", group.by = "majority_voting")
p2 <- DimPlot(seurobj, reduction = "umap", group.by = "source")
p3 <- DimPlot(seurobj, reduction = "umap", group.by = "patient")
p4 <- DimPlot(seurobj, reduction = "umap", group.by = "case.control")
p1 | p2 | p3
head(seurobj@meta.data)
# adding case.control metdata
seurobj@meta.data$case.control <- seurobj@meta.data$source
seurobj@meta.data$case.control[seurobj@meta.data$source == "NYU"] <- "WM"
seurobj@meta.data$case.control[seurobj@meta.data$source == "Stanford"] <- "HD"
table(seurobj@meta.data$case.control)
p1
seurobj
table(seurobj@meta.data$majority_voting)
p1 <- DimPlot(seurobj, reduction = "umap", group.by = "majority_voting", label = T) + NoLegend()
p1
p1 <- DimPlot(seurobj, reduction = "umap", group.by = "majority_voting")
p1 <- DimPlot(seurobj, reduction = "umap", group.by = "majority_voting")
ggsave(p1, "/Users/gagled01/morganLab/Waldenstroms/singlecell/figures/scRNA_rawCTAnnotationUMAP.png", height = 4, width = 12)
ggsave(p1, "/Users/gagled01/morganLab/Waldenstroms/singlecell/figures/scRNA_rawCTAnnotationUMAP.png", height = 4, width = 12)
DimPlot(seurobj, reduction = "umap", group.by = "majority_voting")
ggsave("/Users/gagled01/morganLab/Waldenstroms/singlecell/figures/scRNA_rawCTAnnotationUMAP.png", height = 4, width = 12)
ggsave("/Users/gagled01/morganLab/Waldenstroms/singlecell/figures/scRNA_rawCTAnnotationUMAP.png", height = 4, width = 8)
p1 <- DimPlot(seurobj, reduction = "umap", group.by = "majority_voting")
p2 <- DimPlot(seurobj, reduction = "umap", group.by = "source")
p3 <- DimPlot(seurobj, reduction = "umap", group.by = "patient")
p4 <- DimPlot(seurobj, reduction = "umap", group.by = "case.control")
p1 | p2 | p3 | p4
ggsave("/Users/gagled01/morganLab/Waldenstroms/singlecell/figures/scRNA_SCTIntegrated_CTAnnotated_BasicUMAPs.png", height = 4, width = 16)
p1 / (p2 | p3 | p4)
ggsave("/Users/gagled01/morganLab/Waldenstroms/singlecell/figures/scRNA_SCTIntegrated_CTAnnotated_BasicUMAPs.png", height = 4, width = 16)
ggsave("/Users/gagled01/morganLab/Waldenstroms/singlecell/figures/scRNA_SCTIntegrated_CTAnnotated_BasicUMAPs.png", height = 8, width = 12)
p1 <- DimPlot(seurobj, reduction = "umap", group.by = "source")
p2 <- DimPlot(seurobj, reduction = "umap", group.by = "patient")
p3 <- DimPlot(seurobj, reduction = "umap", group.by = "case.control")
p1 | p2 | p3
ggsave("/Users/gagled01/morganLab/Waldenstroms/singlecell/figures/scRNA_SCTIntegrated_CTAnnotated_BasicUMAPs_Horizontal.png", height = 4, width = 12)
p1 / p2 / p3
ggsave("/Users/gagled01/morganLab/Waldenstroms/singlecell/figures/scRNA_SCTIntegrated_CTAnnotated_BasicUMAPs_Vertical.png", height = 12, width = 4)
ggsave("/Users/gagled01/morganLab/Waldenstroms/singlecell/figures/scRNA_SCTIntegrated_CTAnnotated_BasicUMAPs_Vertical.png", height = 12, width = 5)
seurobj_filt <- subset(seurobj, subset = majority_voting %in% c("Age-associated B cells", "Germinal center B cells", "Large pre-B cells", "Memory B cells",
"Naive B cells", "Plasma cells", "Plasmablasts", "Pro-B cells", "Proliferative germinal center B cells", "Small pre-B cells"))
seurobj_filt
base.object
seurobj
saveRDS(seurobj_filt, "/Users/gagled01/morganLab/Waldenstroms/singlecell/objects/scRNA_SCTransformIntegrated_CTAnnotatedCleaned.rds")
DefaultAssay(integrated) <- "RNA"
seurobj <- readRDS("/Users/gagled01/morganLab/Waldenstroms/singlecell/objects/scRNA_SCTransformIntegrated_CTAnnotatedCleaned.rds")
p1 <- DimPlot(seurobj, reduction = "umap", group.by = "majority_voting")
p2 <- DimPlot(seurobj, reduction = "umap", group.by = "source")
p3 <- DimPlot(seurobj, reduction = "umap", group.by = "patient")
p4 <- DimPlot(seurobj, reduction = "umap", group.by = "case.control")
p1 | p2 | p3 | p4
ggsave("/Users/gagled01/morganLab/Waldenstroms/singlecell/figures/scRNA_SCTIntegrated_CTAnnotatedClean_BasicUMAPs_Horizontal.png", height = 4, width = 16)
p1 / p2 / p3
ggsave("/Users/gagled01/morganLab/Waldenstroms/singlecell/figures/scRNA_SCTIntegrated_CTAnnotatedClean_BasicUMAPs_Vertical.png", height = 16, width = 5)
table(seurobj_filt@meta.data$majority_voting)
seurobj_filt@meta.data$majority_voting <- droplevels(seurobj_filt@meta.data$majority_voting)
table(seurobj_filt@meta.data$majority_voting)
saveRDS(base.object_filt, "/Users/gagled01/morganLab/Waldenstroms/singlecell/objects/scRNA_SCTransformIntegrated_CTAnnotatedCleaned.rds")
saveRDS(seurobj_filt, "/Users/gagled01/morganLab/Waldenstroms/singlecell/objects/scRNA_SCTransformIntegrated_CTAnnotatedCleaned.rds")
library(Seurat)
library(ggplot2)
library(dplyr)
library(patchwork)
options(future.globals.maxSize=10000000000000000)
seurobj <- readRDS("/Users/gagled01/morganLab/Waldenstroms/singlecell/objects/scRNA_SCTransformIntegrated_CTAnnotatedCleaned.rds")
p1 <- DimPlot(seurobj, reduction = "umap", group.by = "majority_voting")
p2 <- DimPlot(seurobj, reduction = "umap", group.by = "source")
p3 <- DimPlot(seurobj, reduction = "umap", group.by = "patient")
p4 <- DimPlot(seurobj, reduction = "umap", group.by = "case.control")
p1 | p2 | p3 | p4
ggsave("/Users/gagled01/morganLab/Waldenstroms/singlecell/figures/scRNA_SCTIntegrated_CTAnnotatedClean_BasicUMAPs_Horizontal.png", height = 4, width = 16)
p1 / p2 / p3
ggsave("/Users/gagled01/morganLab/Waldenstroms/singlecell/figures/scRNA_SCTIntegrated_CTAnnotatedClean_BasicUMAPs_Vertical.png", height = 16, width = 5)
p1 / p2 / p3 / p4
ggsave("/Users/gagled01/morganLab/Waldenstroms/singlecell/figures/scRNA_SCTIntegrated_CTAnnotatedClean_BasicUMAPs_Vertical.png", height = 16, width = 5)
p1 <- DimPlot(seurobj, reduction = "umap", group.by = "source")
p2 <- DimPlot(seurobj, reduction = "umap", group.by = "patient")
p3 <- DimPlot(seurobj, reduction = "umap", group.by = "batch")
p1 | p2 | p3
ggsave("/Users/gagled01/morganLab/Waldenstroms/singlecell/figures/scRNA_SCTIntegrated_CTAnnotatedClean_BasicUMAPs_Horizontal.png", height = 4, width = 12)
p1 / p2 / p3
ggsave("/Users/gagled01/morganLab/Waldenstroms/singlecell/figures/scRNA_SCTIntegrated_CTAnnotatedClean_BasicUMAPs_Vertical.png", height = 12, width = 5)
p1
p1 <- DimPlot(seurobj, group.by = "majority_voting")
p1
DefaultAssay(seurobj) <- "RNA"
FeaturePlot(seurobj, features = c("CD19", "MS4A1", "CD38", "CD27",
"CD24", "SDC1", "BCL6", "PAX5",
"CD44", "CD10", "CXCR4", "CXCR5"))
DefaultAssay(seurobj) <- "RNA"
FeaturePlot(seurobj, features = c("CD19", "MS4A1", "CD38", "CD27",
"CD24", "SDC1", "BCL6", "PAX5",
"CD44", "MME", "CXCR4", "CXCR5"))
ggsave("/Users/gagled01/morganLab/Waldenstroms/singlecell/figures/scRNA_SCTIntegrated_CTAnnotatedClean_BasicUMAPs_Vertical.png", height = 12, width = 16)
DefaultAssay(seurobj) <- "RNA"
FeaturePlot(seurobj, features = c("CD19", "MS4A1", "CD38", "CD27",
"CD24", "SDC1", "BCL6", "PAX5",
"CD44", "MME", "CXCR4", "CXCR5"))
ggsave("/Users/gagled01/morganLab/Waldenstroms/singlecell/figures/scRNA_SCTIntegrated_CTAnnotatedClean_FeaturePlots.png", height = 12, width = 16)
p1 <- DimPlot(seurobj, reduction = "umap", group.by = "source")
p2 <- DimPlot(seurobj, reduction = "umap", group.by = "patient")
p1 / p2 / p3
ggsave("/Users/gagled01/morganLab/Waldenstroms/singlecell/figures/scRNA_SCTIntegrated_CTAnnotatedClean_BasicUMAPs_Vertical.png", height = 12, width = 5)
DimPlot(seurobj, group.by = "seurat_clusters")
table(Idents(seurobj))
Idents(seurobj) <- "majority_voting"
all.markers <- FindAllMarkers(seurobj)
memory.b.markers <- all.markers[all.markers$cluster == "Memory B cell',"]
temp <- memory.b.markers %>% arrange(p_val_adj)
head(memory.b.markers)
table(all.markers$cluster)
memory.b.markers <- all.markers[all.markers$cluster == "Memory B cells",]
temp <- memory.b.markers %>% arrange(p_val_adj)
temp
FeaturePlot(seurobj, features = c("BCL2", "ZEB1"))
DefaultAssay(seurobj) <- "RNA"
FeaturePlot(seurobj, features = c("BCL2", "ZEB1"))
DefaultAssay(seurobj) <- "SCT"
FeaturePlot(seurobj, features = c("BCL2", "ZEB1"))
FeaturePlot(seurobj, features = c("CD19", "MS4A1", "CD38", "CD27",
"CD24", "SDC1", "BCL6", "PAX5",
"CD44", "MME", "CXCR4", "CXCR5"))
FeaturePlot(seurobj, features = c("CD19", "MS4A1", "CD38", "CD27",
"CD24", "SDC1", "BCL6", "PAX5",
"CD44", "MME", "CXCR4", "CXCR5"))
ggsave("/Users/gagled01/morganLab/Waldenstroms/singlecell/figures/scRNA_SCTIntegrated_CTAnnotatedClean_FeaturePlots.png", height = 12, width = 16)
6211+6347+7843+7071+7898+7927
5969+6083+7356+6789+7584+7585
43297/41366
41366/43297
3075+11354+7394+9745+6930+5382+8764
2999+10801+6998+9370+6383+4902+8710
50163/52644
1-(50163/52644)
50163+41366
DefaultAssay(seurobj) <- "RNA"
FeaturePlot(seurobj, features = c("CD19", "MS4A1", "CD38", "CD27",
"CD24", "SDC1", "BCL6", "PAX5",
"CD44", "MME", "CXCR4", "CXCR5"))
install.packages("devtools")
devtools::install_github("veltenlab/rnamagnet")
install.packages("Rmagic")
install.packages("Rmagic")
