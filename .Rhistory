"Hba-a1",
"Car1", "Cdk6", "Peak1", "Mki67",
"Cdh19", "Plp1",
"Chodl"), ncol = 4)
ggsave("/Users/gagled01/morganLab/5TGM1_Stromal/figures/temptemp.png", height = 16, width = 16)
DefaultAssay(stromals) <- "RNA"
markers <- FindAllMarkers(stromals)
markers <- FindAllMarkers(stromals, assay = "RNA")
markers <- FindAllMarkers(stromals, assay = "RNA", slot = "data")
FeaturePlot(stromals, features = c("Cd79a",
"Ccl3", "Tyrobp",
"Ppbp" ), ncol = 4)
ggsave("/Users/gagled01/morganLab/5TGM1_Stromal/figures/SecondaryContamination.png", height = 8, width = 8)
FeaturePlot(stromals, features = c("Cd79a",
"Ccl3", "Tyrobp",
"Ppbp" ), ncol = 2)
ggsave("/Users/gagled01/morganLab/5TGM1_Stromal/figures/SecondaryContamination.png", height = 8, width = 8)
ggsave("/Users/gagled01/morganLab/5TGM1_Stromal/figures/SecondaryContamination.pdf", height = 8, width = 8)
FeaturePlot(stromals, features = c("Cd79a", "Acan", "Cdh5", "Flt4", "Ly6a", "Il6st"))
ggsave("/Users/gagled01/morganLab/5TGM1_Stromal/figures/Subset_Annotations.png", height = 8, width = 8)
ggsave("/Users/gagled01/morganLab/5TGM1_Stromal/figures/Subset_Annotations.pdf", height = 8, width = 8)
Idents(stromals) <- stromals@meta.data$seurat_clusters
# Updated annotations 10/12/2023 so that HSC/GMP and RBCs can be annotated more finely
stromals <- RenameIdents(stromals, "0" = "MSC")
stromals <- RenameIdents(stromals, "1" = "AEC")
stromals <- RenameIdents(stromals, "2" = "Fibroblasts")
stromals <- RenameIdents(stromals, "3" = "SEC")
stromals <- RenameIdents(stromals, "4" = "Fibroblasts")
stromals <- RenameIdents(stromals, "5" = "AEC")
stromals <- RenameIdents(stromals, "6" = "Pericytes")
stromals <- RenameIdents(stromals, "7" = "OLC")
stromals <- RenameIdents(stromals, "8" = "MSC")
stromals <- RenameIdents(stromals, "9" = "SEC")
stromals <- RenameIdents(stromals, "10" = "OLC")
stromals <- RenameIdents(stromals, "11" = "Pericytes")
stromals <- RenameIdents(stromals, "12" = "B cells")
stromals <- RenameIdents(stromals, "13" = "Contam")
stromals <- RenameIdents(stromals, "14" = "Contam")
stromals <- RenameIdents(stromals, "15" = "Chondrocytes")
stromals <- RenameIdents(stromals, "16" = "Contam")
stromals@meta.data$celltypes_highRes <- Idents(stromals)
#DimPlot(stromals, group.by = "celltypes", label = T, split.by = "case.control")
DefaultAssay(stromals.subbed) <- "integrated"
stromals.subbed <- subset(stromals, subset = celltypes_highRes %in% c("MSC", "OLC", "AEC", "SEC", "Fibroblasts", "Chondrocytes", "Pericytes"))
DefaultAssay(stromals.subbed) <- "integrated"
stromals.subbed <- ScaleData(stromals.subbed)
stromals.subbed <- FindVariableFeatures(stromals.subbed, nfeatures = 2000)
stromals.subbed <- RunPCA(stromals.subbed, npcs = 25)
ElbowPlot(
object = stromals.subbed,
ndims = 25
) +
geom_abline(
aes(intercept = 1.75, slope = 0, color = "red"),
show.legend = FALSE
)
# Determine percent of variation associated with each PC
pct <- stromals.subbed[["pca"]]@stdev / sum(stromals.subbed[["pca"]]@stdev) * 100
cumu <- cumsum(pct) # Calculate cumulative percents for each PC
# Determine which PC exhibits cumulative percent greater than 90% and % variation associated with the PC as less than 5
co1 <- which(cumu > 90 & pct < 5)[1]
# Determine the difference between variation of PC and subsequent PC
co2 <- sort(which((pct[1:length(pct) - 1] - pct[2:length(pct)]) > 0.1), decreasing = T)[1] + 1
if (co1 < co2) {
n_pc <- co1
print(paste0("the elbow PC is ", co1))
} else {
n_pc <- 2
print(paste0("the elbow point is ", co2))
}
stromals.subbed <- ScaleData(stromals.subbed)
stromals.subbed <- FindVariableFeatures(stromals.subbed, nfeatures = 2000)
stromals.subbed <- RunPCA(stromals.subbed, npcs = 20)
stromals.subbed <- FindNeighbors(stromals.subbed, dims = 1:20)
stromals.subbed <- FindClusters(stromals.subbed, resolution = 0.2)
stromals.subbed <- RunUMAP(stromals.subbed, dims = 1:20)
DimPlot(stromals.subbed, label = T)
DimPlot(stromals.subbed, group.by = "celltypes_highRes", label = T)
table(stromals.subbed@meta.data$celltypes_highRes)
stromals.subbed
stromals
DimPlot(mouseBM, group.by = "seurat_clusters", label = T)
stromals.subbed
saveRDS(stromals.subbed, "/Users/gagled01/morganLab/5TGM1_Stromal/5TGM1_StromalsOnly_Annotated_Object_RevisionRemade.rds")
FindAllMarkers(stromals)
stromals <- JoinLayers(stromals)
markers <- FindAllMarkers(stromals, assay = "RNA")
markers
Idents(stromals) <- "seurat_clusters"
markers <- FindAllMarkers(stromals, assay = "RNA")
markers
c14.markers <- markers[markers$cluster == "14",]
c14.markers
FeaturePlot(stromals, features = c("Lepr", "Cxcl12",
"Bglap", "Spp1",
"Cdh5", "Emcn",
"S100a4", "Fn1",
"Sox9", "Acan",
"Acta2", "Myh11"), ncol = 4)
ggsave("/Users/gagled01/morganLab/5TGM1_Stromal/figures/Stromal_markres.png", height = 12, width = 16)
DimPlot(stromals, label = T)
DimPlot(stromals, group.by = "celltypes", label = T)
DimPlot(mouseBM, group.by = "celltypes", label = T)
DimPlot(mouseBM, group.by = "seurat_clusters", label = T)
FeaturePlot(mouseBM, features = c("Cd79a", "Acan", "Cdh5", "Flt4", "Ly6a", "Il6st"))
DimPlot(mouseBM, group.by = "celltypes", label = T)
DimPlot(mouseBM, group.by = "seurat_clusters", label = T)
FeaturePlot(mouseBM, features = c("Cd79a", "Acan", "Cdh5", "Flt4", "Ly6a", "Il6st", "Cxcl12"))
ggsave("/Users/gagled01/morganLab/5TGM1_Stromal/figures/testttt.pdf")
ggsave("/Users/gagled01/morganLab/5TGM1_Stromal/figures/testttt.png")
ggsave("/Users/gagled01/morganLab/5TGM1_Stromal/figures/testttt.png", width = 12, height = 12)
DimPlot(mouseBM, group.by = "celltypes", label = T)
DimPlot(mouseBM, group.by = "seurat_clusters", label = T)
FeaturePlot(mouseBM, features = "Cd4")
FeaturePlot(mouseBM, features = "Nkg7")
DimPlot(mouseBM, group.by = "integrated_snn_res.0.5", label = T)
Idents(mouseBM) <- mouseBM@meta.data$integrated_snn_res.0.2
# Updated annotations 10/12/2023 so that HSC/GMP and RBCs can be annotated more finely
mouseBM <- RenameIdents(mouseBM, "0" = "B cells")
mouseBM <- RenameIdents(mouseBM, "1" = "MoMacs")
mouseBM <- RenameIdents(mouseBM, "2" = "B cells")
mouseBM <- RenameIdents(mouseBM, "3" = "Cycling/proliferating")
mouseBM <- RenameIdents(mouseBM, "4" = "Fibroblasts")
mouseBM <- RenameIdents(mouseBM, "5" = "MSC")
mouseBM <- RenameIdents(mouseBM, "6" = "Platelets")
mouseBM <- RenameIdents(mouseBM, "7" = "SEC")
mouseBM <- RenameIdents(mouseBM, "8" = "AEC")
mouseBM <- RenameIdents(mouseBM, "9" = "B cells")
mouseBM <- RenameIdents(mouseBM, "10" = "Pericytes")
mouseBM <- RenameIdents(mouseBM, "11" = "Cycling/proliferating")
mouseBM <- RenameIdents(mouseBM, "12" = "AEC")
mouseBM <- RenameIdents(mouseBM, "13" = "OLC")
mouseBM <- RenameIdents(mouseBM, "14" = "B cells")
mouseBM <- RenameIdents(mouseBM, "15" = "HSC/GMP")
mouseBM <- RenameIdents(mouseBM, "16" = "MoMacs")
mouseBM <- RenameIdents(mouseBM, "17" = "RBC")
mouseBM <- RenameIdents(mouseBM, "18" = "Motor neurons")
mouseBM <- RenameIdents(mouseBM, "19" = "Oligodendrocytes")
mouseBM@meta.data$celltypes <- Idents(mouseBM)
DimPlot(mouseBM, group.by = "celltypes", label = T)
ggsave("/Users/gagled01/morganLab/5TGM1_Stromal/figures/AllCells_StromalImmune_Annotated_UMAP.png", height = 6, width = 8)
ggsave("/Users/gagled01/morganLab/5TGM1_Stromal/figures/AllCells_StromalImmune_Annotated_UMAP.pdf", height = 6, width = 8)
mouseBM
postfilter_total <- sum(length(colnames(lib1)), length(colnames(lib2)), length(colnames(lib3)), length(colnames(lib5)), length(colnames(lib6)))
WhichCells(mouseBM, idents="Fibroblasts", expression=Acan >0)
WhichCells(mouseBM, idents="Fibroblasts", expression=Acan >1)
chondro <- WhichCells(mouseBM, idents="Fibroblasts", expression=Acan >1)
mouseBM@meta.data$temp <- ifelse(colnames(mouseBM) %in% chondro, "chondro", "not")
DimPlot(mouseBM, group.by = "temp")
chondro <- WhichCells(mouseBM, idents="Fibroblasts", expression=Acan >3)
mouseBM@meta.data$temp <- ifelse(colnames(mouseBM) %in% chondro, "chondro", "not")
DimPlot(mouseBM, group.by = "temp")
chondro <- WhichCells(mouseBM, idents="Fibroblasts", expression=Acan > 2)
mouseBM@meta.data$temp <- ifelse(colnames(mouseBM) %in% chondro, "chondro", "not")
DimPlot(mouseBM, group.by = "temp")
chondro <- WhichCells(mouseBM, idents="Fibroblasts", expression=Acan > 2.5)
mouseBM@meta.data$temp <- ifelse(colnames(mouseBM) %in% chondro, "chondro", "not")
DimPlot(mouseBM, group.by = "temp")
chondro <- WhichCells(mouseBM, idents="Fibroblasts", expression=Acan > 2)
mouseBM@meta.data$temp <- ifelse(colnames(mouseBM) %in% chondro, "chondro", "not")
DimPlot(mouseBM, group.by = "temp")
mouseBM@meta.data$celltypes[chondro]
mouseBM@meta.data$celltypes[colnames(mouseBm) %in% chondro,]
mouseBM@meta.data$celltypes[colnames(mouseBM) %in% chondro,]
mouseBM@meta.data$celltypes[colnames(mouseBM) %in% chondro,]
mouseBM@meta.data$celltypes[colnames(mouseBM) %in% chondro,]
mouseBM@meta.data$celltypes[colnames(mouseBM) %in% chondro]
mouseBM@meta.data$celltypes[colnames(mouseBM) %in% chondro] <- "Chondrocytes"
Idents(mouseBM) <- mouseBM@meta.data$integrated_snn_res.0.2
# Updated annotations 10/12/2023 so that HSC/GMP and RBCs can be annotated more finely
mouseBM <- RenameIdents(mouseBM, "0" = "B cells")
mouseBM <- RenameIdents(mouseBM, "1" = "MoMacs")
mouseBM <- RenameIdents(mouseBM, "2" = "B cells")
mouseBM <- RenameIdents(mouseBM, "3" = "Cycling/proliferating")
mouseBM <- RenameIdents(mouseBM, "4" = "Fibroblasts")
mouseBM <- RenameIdents(mouseBM, "5" = "MSC")
mouseBM <- RenameIdents(mouseBM, "6" = "Platelets")
mouseBM <- RenameIdents(mouseBM, "7" = "SEC")
mouseBM <- RenameIdents(mouseBM, "8" = "AEC")
mouseBM <- RenameIdents(mouseBM, "9" = "B cells")
mouseBM <- RenameIdents(mouseBM, "10" = "Pericytes")
mouseBM <- RenameIdents(mouseBM, "11" = "Cycling/proliferating")
mouseBM <- RenameIdents(mouseBM, "12" = "AEC")
mouseBM <- RenameIdents(mouseBM, "13" = "OLC")
mouseBM <- RenameIdents(mouseBM, "14" = "B cells")
mouseBM <- RenameIdents(mouseBM, "15" = "HSC/GMP")
mouseBM <- RenameIdents(mouseBM, "16" = "MoMacs")
mouseBM <- RenameIdents(mouseBM, "17" = "RBC")
mouseBM <- RenameIdents(mouseBM, "18" = "Motor neurons")
mouseBM <- RenameIdents(mouseBM, "19" = "Oligodendrocytes")
mouseBM@meta.data$celltypes <- Idents(mouseBM)
chondro <- WhichCells(mouseBM, idents="Fibroblasts", expression = Acan > 2)
mouseBM@meta.data$temp <- ifelse(colnames(mouseBM) %in% chondro, "chondro", "not")
DimPlot(mouseBM, group.by = "temp")
mouseBM@meta.data$celltypes <- as.character(mouseBM@meta.data$celltypes)
mouseBM@meta.data$celltypes[colnames(mouseBM) %in% chondro] <- "Chondrocytes"
mouseBM@meta.data$celltypes <- as.factor(mouseBM@meta.data$celltypes)
table(mouseBM@meta.data$celltypes)
DimPlot(mouseBM, group.by = "celltypes", label = T)
DimPlot(mouseBM, group.by = "celltypes", label = T)
ggsave("/Users/gagled01/morganLab/5TGM1_Stromal/figures/AllCells_StromalImmune_Annotated_UMAP.png", height = 6, width = 8)
ggsave("/Users/gagled01/morganLab/5TGM1_Stromal/figures/AllCells_StromalImmune_Annotated_UMAP.pdf", height = 6, width = 8)
Idents(mouseBM) <- mouseBM@meta.data$integrated_snn_res.0.2
# Updated annotations 10/12/2023 so that HSC/GMP and RBCs can be annotated more finely
mouseBM <- RenameIdents(mouseBM, "0" = "B cells")
mouseBM <- RenameIdents(mouseBM, "1" = "MoMacs")
mouseBM <- RenameIdents(mouseBM, "2" = "B cells")
mouseBM <- RenameIdents(mouseBM, "3" = "Cycling/proliferating")
mouseBM <- RenameIdents(mouseBM, "4" = "Fibroblasts")
mouseBM <- RenameIdents(mouseBM, "5" = "MSC")
mouseBM <- RenameIdents(mouseBM, "6" = "Platelets")
mouseBM <- RenameIdents(mouseBM, "7" = "SEC")
mouseBM <- RenameIdents(mouseBM, "8" = "AEC")
mouseBM <- RenameIdents(mouseBM, "9" = "B cells")
mouseBM <- RenameIdents(mouseBM, "10" = "Pericytes")
mouseBM <- RenameIdents(mouseBM, "11" = "Cycling/proliferating")
mouseBM <- RenameIdents(mouseBM, "12" = "AEC")
mouseBM <- RenameIdents(mouseBM, "13" = "OLC")
mouseBM <- RenameIdents(mouseBM, "14" = "B cells")
mouseBM <- RenameIdents(mouseBM, "15" = "HSC/GMP")
mouseBM <- RenameIdents(mouseBM, "16" = "MoMacs")
mouseBM <- RenameIdents(mouseBM, "17" = "RBC")
mouseBM <- RenameIdents(mouseBM, "18" = "Neurons")
mouseBM <- RenameIdents(mouseBM, "19" = "Oligodendrocytes")
mouseBM@meta.data$celltypes <- Idents(mouseBM)
chondro <- WhichCells(mouseBM, idents="Fibroblasts", expression = Acan > 2)
mouseBM@meta.data$temp <- ifelse(colnames(mouseBM) %in% chondro, "chondro", "not")
DimPlot(mouseBM, group.by = "temp")
mouseBM@meta.data$celltypes <- as.character(mouseBM@meta.data$celltypes)
mouseBM@meta.data$celltypes[colnames(mouseBM) %in% chondro] <- "Chondrocytes"
mouseBM@meta.data$celltypes <- as.factor(mouseBM@meta.data$celltypes)
table(mouseBM@meta.data$celltypes)
DimPlot(mouseBM, group.by = "celltypes", label = T)
ggsave("/Users/gagled01/morganLab/5TGM1_Stromal/figures/AllCells_StromalImmune_Annotated_UMAP.png", height = 6, width = 8)
ggsave("/Users/gagled01/morganLab/5TGM1_Stromal/figures/AllCells_StromalImmune_Annotated_UMAP.pdf", height = 6, width = 8)
Idents(mouseBM) <- mouseBM@meta.data$integrated_snn_res.0.2
# Updated annotations 10/12/2023 so that HSC/GMP and RBCs can be annotated more finely
mouseBM <- RenameIdents(mouseBM, "0" = "B cells")
mouseBM <- RenameIdents(mouseBM, "1" = "MoMacs")
mouseBM <- RenameIdents(mouseBM, "2" = "B cells")
mouseBM <- RenameIdents(mouseBM, "3" = "Cycling/proliferating")
mouseBM <- RenameIdents(mouseBM, "4" = "Fibroblasts")
mouseBM <- RenameIdents(mouseBM, "5" = "MSC")
mouseBM <- RenameIdents(mouseBM, "6" = "Platelets")
mouseBM <- RenameIdents(mouseBM, "7" = "SEC")
mouseBM <- RenameIdents(mouseBM, "8" = "AEC")
mouseBM <- RenameIdents(mouseBM, "9" = "B cells")
mouseBM <- RenameIdents(mouseBM, "10" = "Pericytes")
mouseBM <- RenameIdents(mouseBM, "11" = "Cycling/proliferating")
mouseBM <- RenameIdents(mouseBM, "12" = "AEC")
mouseBM <- RenameIdents(mouseBM, "13" = "OLC")
mouseBM <- RenameIdents(mouseBM, "14" = "B cells")
mouseBM <- RenameIdents(mouseBM, "15" = "HSC/GMP")
mouseBM <- RenameIdents(mouseBM, "16" = "MoMacs")
mouseBM <- RenameIdents(mouseBM, "17" = "RBC")
mouseBM <- RenameIdents(mouseBM, "18" = "Neurons")
mouseBM <- RenameIdents(mouseBM, "19" = "Oligodendrocytes")
mouseBM@meta.data$celltypes <- Idents(mouseBM)
chondro <- WhichCells(mouseBM, idents="Fibroblasts", expression = Acan > 1)
mouseBM@meta.data$temp <- ifelse(colnames(mouseBM) %in% chondro, "chondro", "not")
DimPlot(mouseBM, group.by = "temp")
mouseBM@meta.data$celltypes <- as.character(mouseBM@meta.data$celltypes)
mouseBM@meta.data$celltypes[colnames(mouseBM) %in% chondro] <- "Chondrocytes"
mouseBM@meta.data$celltypes <- as.factor(mouseBM@meta.data$celltypes)
table(mouseBM@meta.data$celltypes)
DimPlot(mouseBM, group.by = "celltypes", label = T)
ggsave("/Users/gagled01/morganLab/5TGM1_Stromal/figures/AllCells_StromalImmune_Annotated_UMAP.png", height = 6, width = 8)
ggsave("/Users/gagled01/morganLab/5TGM1_Stromal/figures/AllCells_StromalImmune_Annotated_UMAP.pdf", height = 6, width = 8)
stromals <- subset(mouseBM, subset = celltypes %in% c("OLC", "MSC", "SEC", "AEC", "Fibroblasts", "Chondrocytes", "Pericytes"))
stromals@meta.data$celltypes <- droplevels(stromals@meta.data$celltypes)
DefaultAssay(stromals) <- "integrated"
stromals <- ScaleData(stromals)
stromals <- FindVariableFeatures(stromals, nfeatures = 2000)
stromals <- RunPCA(stromals, npcs = 25)
ElbowPlot(
object = stromals,
ndims = 25
) +
geom_abline(
aes(intercept = 1.75, slope = 0, color = "red"),
show.legend = FALSE
)
# Determine percent of variation associated with each PC
pct <- stromals[["pca"]]@stdev / sum(stromals[["pca"]]@stdev) * 100
cumu <- cumsum(pct) # Calculate cumulative percents for each PC
# Determine which PC exhibits cumulative percent greater than 90% and % variation associated with the PC as less than 5
co1 <- which(cumu > 90 & pct < 5)[1]
# Determine the difference between variation of PC and subsequent PC
co2 <- sort(which((pct[1:length(pct) - 1] - pct[2:length(pct)]) > 0.1), decreasing = T)[1] + 1
if (co1 < co2) {
n_pc <- co1
print(paste0("the elbow PC is ", co1))
} else {
n_pc <- 2
print(paste0("the elbow point is ", co2))
}
stromals <- FindNeighbors(stromals, dims = 1:21)
stromals <- FindClusters(stromals, resolution = 0.2)
stromals <- RunUMAP(stromals, dims = 1:21)
DimPlot(stromals, label = T)
DimPlot(stromals, group.by = "celltypes", label = T)
saveRDS(stromals.subbed, "/Users/gagled01/morganLab/5TGM1_Stromal/5TGM1_StromalsOnly_Annotated_Object_RevisionRemade.rds")
stromals <- readRDS("/Users/gagled01/morganLab/5TGM1_Stromal/objects/Rerun_Mouse5TG_StromalsOnly_AnnotatedObject6_21PCs_NoLib_FIXEDLIBRARIES_6.rds")
stromals
stromals2 <- readRDS("/Users/gagled01/morganLab/5TGM1_Stromal/objects/Rerun_Mouse5TG_StromalsOnly_AnnotatedObject6_21PCs_NoLib_FIXEDLIBRARIES_6_FixedMetadata.rds")
stromals2
library(Seurat)
library(ggplot2)
library(ggpubr)
library(grid)
library(gridExtra)
library(patchwork)
stromals <- readRDS("/Users/gagled01/morganLab/5TGM1_Stromal/objects/Rerun_Mouse5TG_StromalsOnly_AnnotatedObject6_21PCs_NoLib_FIXEDLIBRARIES_6.rds")
stromals <- readRDS("/Users/gagled01/morganLab/5TGM1_Stromal/objects/Rerun_Mouse5TG_StromalsOnly_AnnotatedObject6_21PCs_NoLib_FIXEDLIBRARIES_6.rds")
subtype <- subset(stromals, subset = celltypes_ECsubbed %in% c("Sinusoidal ECs", "Arterial ECs"))
subtype <- ScaleData(subtype)
subtype <- FindVariableFeatures(subtype, nfeatures = 2000)
subtype <- RunPCA(subtype, npcs = 10)
subtype <- FindNeighbors(subtype, dims = 1:10)
subtype <- FindClusters(subtype, resolution = 0.2)
subtype <- RunUMAP(subtype, dims = 1:10)
DimPlot(subtype)
bmecs <- readRDS("/Users/gagled01/morganLab/5TGM1_Stromal/objects/5TGM1_BMEC_Object.rds")
VlnPlot(bmecs, features = c("bmecs", "Pecam1", "Eng", "Emcn", "Prrx1", "Col1a1", "Snai2", "Twist1", "Twist2", "Zeb2", "Yap1", "Cxcl12"), ncol = 4)
ggsave("/Users/gagled01/morganLab/single-cell/5TG_Mouse_Rerun/figures/bmecs_Pos_Cells_EndoMT_Genes_ViolinPlots.png", height = 12, width = 18)
DimPlot(bmecs)
ggsave("/Users/gagled01/morganLab/single-cell/5TG_Mouse_Rerun/figures/bmecs_Pos_Cells_UMAP.png", height = 4, width = 5)
DimPlot(bmecs, group.by = "celltypes_ECsubbed")
ggsave("/Users/gagled01/morganLab/single-cell/5TG_Mouse_Rerun/figures/bmecs_Pos_Cells__CellTypes_UMAP.png", height = 4, width = 5)
DimPlot(bmecs, split.by = "case.control")
ggsave("/Users/gagled01/morganLab/single-cell/5TG_Mouse_Rerun/figures/bmecs_Pos_Cells_ConditionSplit_UMAP.png", height = 4, width = 8)
VlnPlot(bmecs, features = c("Cdh5", "Pecam1", "Eng", "Emcn", "Prrx1", "Col1a1", "Snai2", "Twist1", "Twist2", "Zeb2", "Yap1", "Cxcl12"), ncol = 4)
ggsave("/Users/gagled01/morganLab/single-cell/5TG_Mouse_Rerun/figures/bmecs_Pos_Cells_EndoMT_Genes_ViolinPlots.png", height = 12, width = 18)
DimPlot(bmecs)
ggsave("/Users/gagled01/morganLab/single-cell/5TG_Mouse_Rerun/figures/bmecs_Pos_Cells_UMAP.png", height = 4, width = 5)
DimPlot(bmecs, group.by = "celltypes_ECsubbed")
ggsave("/Users/gagled01/morganLab/single-cell/5TG_Mouse_Rerun/figures/bmecs_Pos_Cells__CellTypes_UMAP.png", height = 4, width = 5)
DimPlot(bmecs, split.by = "case.control")
ggsave("/Users/gagled01/morganLab/single-cell/5TG_Mouse_Rerun/figures/bmecs_Pos_Cells_ConditionSplit_UMAP.png", height = 4, width = 8)
VlnPlot(bmecs, features = c("Cdh5", "Pecam1", "Eng", "Emcn", "Prrx1", "Col1a1", "Snai2", "Twist1", "Twist2", "Zeb2", "Yap1", "Cxcl12"), ncol = 4)
ggsave("/Users/gagled01/morganLab/5TGM1_Stromal/figures/Cdh5_Pos_Cells_EndoMT_Genes_ViolinPlots.png", height = 12, width = 18)
DimPlot(bmecs)
ggsave("/Users/gagled01/morganLab/5TGM1_Stromal/figures/Cdh5_Pos_Cells_UMAP.png", height = 4, width = 5)
DimPlot(bmecs, group.by = "celltypes_ECsubbed")
ggsave("/Users/gagled01/morganLab/5TGM1_Stromal/figures/Cdh5_Pos_Cells__CellTypes_UMAP.png", height = 4, width = 5)
DimPlot(bmecs, split.by = "case.control")
ggsave("/Users/gagled01/morganLab/5TGM1_Stromal/figures/Cdh5_Pos_Cells_ConditionSplit_UMAP.png", height = 4, width = 8)
VlnPlot(bmecs, features = c("Cdh5", "Pecam1", "Eng", "Emcn", "Prrx1", "Col1a1", "Snai2", "Twist1", "Twist2", "Zeb2", "Zeb1", "Yap1", "Cxcl12", "Fap", "Cspg4"), ncol = 4)
ggsave("/Users/gagled01/morganLab/5TGM1_Stromal/figures/Cdh5_Pos_Cells_EndoMT_Genes_ViolinPlots.png", height = 12, width = 18)
FeaturePlot(bmecs, features = c("Cdh5", "Pecam1", "Eng", "Emcn", "Prrx1", "Col1a1", "Snai2", "Twist1", "Twist2", "Zeb2", "Zeb1", "Yap1", "Cxcl12", "Fap", "Cspg4"), ncol = 4)
ggsave("/Users/gagled01/morganLab/5TGM1_Stromal/figures/Cdh5_Pos_Cells_EndoMT_Genes_FeaeturePlots.png", height = 12, width = 18)
DimPlot(bmecs, split.by = "case.control")
ggsave("/Users/gagled01/morganLab/5TGM1_Stromal/figures/Cdh5_Pos_Cells_ConditionSplit_UMAP.png", height = 4, width = 8)
library(DESeq2)
library(DEP)
library(apeglm)
library(rtracklayer)
library(tidyverse)
library(ComplexHeatmap)
library(glue)
library(ggrepel)
library(EnhancedVolcano)
library(ggpubr)
library(SingleCellExperiment)
library(ensembldb)
library(EnsDb.Hsapiens.v86)
options(scipen = 999)
set.seed(101010)
# Set figure base theme
theme_set(
theme_gray() +
theme(axis.line = element_line(size = 0.5,  color = "black"),
panel.background = element_rect(fill = NA, size = rel(14)),
panel.grid.minor = element_line(color = NA),
axis.text = element_text(size = 12,  color = "black"),
axis.title = element_text(size = 14),
axis.ticks = element_line(size = 0.75),
title = element_text(size = 16),
plot.title = element_text(hjust = 0.5)
)
)
library(DESeq2)
library(DEP)
library(apeglm)
library(rtracklayer)
library(tidyverse)
library(ComplexHeatmap)
library(glue)
library(ggrepel)
library(EnhancedVolcano)
library(ggpubr)
library(SingleCellExperiment)
library(ensembldb)
library(EnsDb.Hsapiens.v86)
options(scipen = 999)
set.seed(101010)
# Set figure base theme
theme_set(
theme_gray() +
theme(axis.line = element_line(size = 0.5,  color = "black"),
panel.background = element_rect(fill = NA, size = rel(14)),
panel.grid.minor = element_line(color = NA),
axis.text = element_text(size = 12,  color = "black"),
axis.title = element_text(size = 14),
axis.ticks = element_line(size = 0.75),
title = element_text(size = 16),
plot.title = element_text(hjust = 0.5)
)
)
counts_data <- "/Users/gagled01/morganLab/NSD2/data/MMRF_CoMMpass_IA21_star_geneUnstranded_counts.tsv"
gencode_gene_list = "/Users/gagled01/morganLab/Waldenstroms/Bulk-RNA/gencode.v42.primary_assembly.basic.annotation.gtf.gz"
raw_counts <- read.table(file = counts_data, header = T)
# load metadata
metadata <- read.csv("/Users/gagled01/morganLab/NSD2/data/commpassMetadata.csv")
metadata$sample_fixed <- gsub("^(([^_]*_){4}[^_]*).*", "\\1", metadata$sample)
# Add new column for comparison
metadata$condition <- ""
metadata$condition[metadata$igh_translocation == "t(4;14)"] <- "t(4;14)"
metadata$condition[metadata$igh_translocation %in% c("t(11;14)", "t(14;16)", "t(14;20", "t(6;14)", "t(8;14)")] <- "other_translocations"
# extract cases with known translocations (all we are interested in)
translocation_metadata <- metadata[metadata$igh_translocation %in% c("t(11;14)", "t(14;16)", "t(14;20", "t(4;14)", "t(6;14)", "t(8;14)"),]
table(translocation_metadata$igh_translocation)
# add new column for appropriate downstream sample matching
translocation_metadata$sample_fixed <- make.unique(gsub("^(([^_]*_){4}[^_]*).*", "\\1", translocation_metadata$sample))
# Set colnames
colnames(raw_counts) <- read_delim(file = counts_data,
delim = "\t",
col_names = T,
show_col_types = FALSE) %>%
colnames() %>% str_remove(pattern = "\\#")
total_counts <- tibble::column_to_rownames(raw_counts,
var = "Gene")
# Remove cases without translocation information
total_counts_translocationsOnly <- total_counts[, colnames(total_counts) %in% translocation_metadata$sample_fixed]
# Subset metadata so it is same size as count data
translocation_metadata_subbed <- translocation_metadata[translocation_metadata$sample_fixed %in% colnames(total_counts_translocationsOnly),]
# Create coldata object
coldata <- data.frame(names = translocation_metadata_subbed$sample_fixed, condition = translocation_metadata_subbed$igh_translocation)
rownames(coldata) <- make.unique(translocation_metadata_subbed$sample_fixed)
# reorder weird mismatches...
colnames(total_counts_translocationsOnly) == translocation_metadata_subbed$sample_fixed
total_counts_translocationsOnly_reordered <- total_counts_translocationsOnly %>% relocate(MMRF_1157_1_BM_CD138pos, .after = MMRF_1129_1_BM_CD138pos) %>%
relocate(MMRF_1179_2_BM_CD138pos, .after = MMRF_1179_1_BM_CD138pos) %>%
relocate(MMRF_1269_3_BM_CD138pos, .after = MMRF_1269_1_BM_CD138pos)
# Add new column for comparison
metadata$condition2 <- ""
metadata$condition2[metadata$igh_translocation == "t(4;14)"] <- "t(4;14)"
metadata$condition2[metadata$igh_translocation %in% c("t(11;14)", "t(14;16)", "t(14;20", "t(6;14)", "t(8;14)", "Not Detected")] <- "other_CoMMPASS_samples"
# extract cases with known translocations (all we are interested in)
condition2_metadata <- metadata[metadata$condition2 %in% c("t(4;14)", "other_CoMMPASS_samples"),]
table(condition2_metadata$condition2)
# add new column for appropriate downstream sample matching
condition2_metadata$sample_fixed <- make.unique(gsub("^(([^_]*_){4}[^_]*).*", "\\1", condition2_metadata$sample))
# Remove cases without relevant information
total_counts_condition2 <- total_counts[, colnames(total_counts) %in% condition2_metadata$sample_fixed]
# Subset metadata so it is same size as count data
condition2_metadata_subbed <- condition2_metadata[condition2_metadata$sample_fixed %in% colnames(total_counts_condition2),]
# Create coldata object
coldata_condition2 <- data.frame(names = condition2_metadata_subbed$sample_fixed, condition = condition2_metadata_subbed$condition2)
rownames(coldata_condition2) <- make.unique(condition2_metadata_subbed$sample_fixed)
coldata_condition2
total_counts_condition2
# reorder weird mismatches...
colnames(total_counts_condition2) == rownames(coldata_condition2)
# THIS SHIT SUCKS BTW! need to figure out a way to do this non-manually...
total_counts_condition2_reordered <- total_counts_condition2 %>%
relocate(MMRF_1157_1_BM_CD138pos, .before = MMRF_1157_2_BM_CD138pos) %>%
relocate(MMRF_1179_1_BM_CD138pos, .before = MMRF_1179_2_BM_CD138pos) %>%
relocate(MMRF_1269_1_BM_CD138pos, .before = MMRF_1269_3_BM_CD138pos) %>%
relocate(MMRF_1285_1_BM_CD138pos, .before = MMRF_1285_3_BM_CD138pos) %>%
relocate(MMRF_1927_1_BM_CD138pos, .before = MMRF_1927_1_PB_CD138pos) %>%
relocate(MMRF_2187_1_BM_CD138pos, .before = MMRF_2187_1_PB_CD138pos) %>%
relocate(MMRF_2523_2_BM_CD138pos, .before = MMRF_2523_2_PB_CD138pos)
colnames(total_counts_condition2_reordered) == rownames(coldata_condition2) # should be all true
# pull conversion from ensembl
ensembl.genes <- rownames(total_counts_condition2_reordered)
gene_id_frame <- ensembldb::select(EnsDb.Hsapiens.v86, keys= ensembl.genes, keytype = "GENEID", columns = c("SYMBOL","GENEID"))
new_gene_ids <- ifelse(ensembl.genes %in% gene_id_frame$GENEID, gene_id_frame$SYMBOL, ensembl.genes)
new_gene_ids <- make.unique(new_gene_ids, sep = "_") # force uniques to account for duplicates during conversion
#intersect(new_gene_ids, ensembl.genes) # confirm it worked
rownames(total_counts_condition2_reordered) <- new_gene_ids # rename rows in count matrix
coldata_condition2 <- data.frame(names = condition2_metadata_subbed$sample_fixed, condition = condition2_metadata_subbed$condition2)
rownames(coldata_condition2) <- make.unique(condition2_metadata_subbed$sample_fixed)
# Create deseq object
dds_condition2 <- DESeqDataSetFromMatrix(countData = total_counts_condition2_reordered,
colData = coldata_condition2,
design = ~ condition)
dds_condition2_log2 <- rlog(dds_condition2)
dds_condition2_log2 <- vst(dds_condition2)
#just retrieve the gene
data<-dds_condition2_log2[rownames(dds_condition2_log2) %in% genes,]
#genes of interest
genes<- c("SULF2","CCND2","PTP4A3","USP49","ISL2","CCND1","MAFA","MAF","MAFB","NSD2","ITGB7","FGFR3","NUAK1","WHSC1","CCND3")
#the gene used and the cut off used to make the call. (Note that 2 genes are used to call the 4;14)
pairs<- data.frame(P1=c("FGFR3","WHSC1","CCND3","MAF","MAFB","MAFA","CCND1"),cut=c(13,14,15,13,12,11,15), TCG=c(4,4,6,16,20,8,11), stringsAsFactors = F)
#just retrieve the gene
data<-dds_condition2_log2[rownames(dds_condition2_log2) %in% genes,]
tdata<-t(data)
data
#inialize annotation
annot<-data.frame(sample=colnames(data),TGROUP=0)
#make the translocation call for each sample
for (row in 1:nrow(pairs)){
p1   <- pairs[row, "P1"]
cut <- pairs[row, "cut"]
tc   <- pairs[row, "TCG"]
print(p1)
annot$TGROUP[(tdata[,p1] > cut & annot$TGROUP==0)]<-tc
}
mdata<-merge(tdata,annot,by.x="row.names",by.y="sample")
tdata<-t(data)
tdata <- as.matrix(data)
